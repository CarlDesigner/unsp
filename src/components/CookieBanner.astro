---
import { db } from "~/lib/firebase";
import { collection, addDoc } from "firebase/firestore";

interface ConsentData {
  accepted: boolean;
  analytics?: boolean;
  ads?: boolean;
}

async function saveConsent(consent: ConsentData) {
  try {
    await addDoc(collection(db, "cookies_consent"), {
      accepted: consent.accepted,
      analytics: consent.analytics || false,
      ads: consent.ads || false,
      timestamp: new Date(),
    });
  } catch (error) {
    console.error("Error guardando consentimiento:", error);
  }
}
---

<div
  id="cookie-banner"
  class="fixed bottom-0 left-0 w-full bg-neutral-800 dark:bg-neutral-900 text-neutral-200 dark:text-neutral-300 p-4 sm:p-6 flex flex-wrap justify-between items-center gap-4 sm:gap-6 invisible opacity-0 transition-opacity duration-300"
>
  <p class="text-sm sm:text-base flex-1">
    Usamos cookies para mejorar tu experiencia en el sitio. Puedes aceptar
    todas, rechazarlas o configurar tus preferencias.
    <a
      id="more-info"
      href="/cookie-policy"
      target="_blank"
      class="underline text-blue-400">Más información</a
    >
  </p>
  <div class="flex flex-wrap gap-2 sm:gap-4">
    <button
      id="accept-cookies"
      class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full sm:w-auto"
    >
      Aceptar
    </button>
    <button
      id="reject-cookies"
      class="bg-neutral-600 hover:bg-neutral-700 text-white px-4 py-2 rounded w-full sm:w-auto"
    >
      Rechazar
    </button>
    <button
      id="config-cookies"
      class="bg-neutral-500 hover:bg-neutral-600 text-white px-4 py-2 rounded w-full sm:w-auto"
    >
      Configurar
    </button>
  </div>
</div>

<div
  id="cookie-settings"
  class="fixed inset-0 bg-black bg-opacity-50 invisible opacity-0 flex items-center justify-center transition-opacity duration-300 p-4"
>
  <div
    class="bg-white dark:bg-neutral-900 p-6 rounded shadow-lg text-black dark:text-neutral-200 w-full max-w-md sm:max-w-lg"
  >
    <h2 class="text-lg sm:text-xl font-bold mb-2">Configuración de Cookies</h2>
    <p class="text-sm sm:text-base">
      Selecciona qué tipo de cookies deseas permitir:
    </p>
    <label class="block mt-2 text-sm sm:text-base">
      <input type="checkbox" id="analytics-cookies" checked /> Cookies Analíticas
    </label>
    <label class="block mt-2 text-sm sm:text-base">
      <input type="checkbox" id="ads-cookies" checked /> Cookies de Publicidad
    </label>
    <div class="flex flex-wrap gap-2 mt-4">
      <button
        id="save-config"
        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full sm:w-auto"
      >
        Guardar
      </button>
      <button
        id="close-config"
        class="bg-neutral-600 hover:bg-neutral-700 text-white px-4 py-2 rounded w-full sm:w-auto"
      >
        Cerrar
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    const banner = document.getElementById("cookie-banner");
    const acceptBtn = document.getElementById("accept-cookies");
    const rejectBtn = document.getElementById("reject-cookies");
    const configBtn = document.getElementById("config-cookies");
    const settingsModal = document.getElementById("cookie-settings");
    const saveConfigBtn = document.getElementById("save-config");
    const closeConfigBtn = document.getElementById("close-config");
    const consentKey = "cookie_consent";

    if (!localStorage.getItem(consentKey) && banner) {
      banner.classList.remove("invisible", "opacity-0");
    }

    async function sendConsent(consent: {
      accepted: boolean;
      analytics: any;
      ads: any;
    }) {
      // Elimina ": ConsentData"
      try {
        await fetch("/api/saveConsent", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(consent),
        });
      } catch (error) {
        console.error("Error enviando datos:", error);
      }
    }

    if (acceptBtn) {
      acceptBtn.addEventListener("click", async () => {
        const consent = { accepted: true, analytics: true, ads: true };
        localStorage.setItem(consentKey, JSON.stringify(consent));
        banner?.classList.add("hidden");
        await sendConsent(consent);
      });
    }

    rejectBtn?.addEventListener("click", async () => {
      const consent = { accepted: false, analytics: false, ads: false };
      localStorage.setItem(consentKey, JSON.stringify(consent));
      banner?.classList.add("hidden");
      await sendConsent(consent);
    });

    configBtn?.addEventListener("click", () => {
      settingsModal?.classList.remove("invisible", "opacity-0");
    });

    closeConfigBtn?.addEventListener("click", () => {
      settingsModal?.classList.add("invisible", "opacity-0");
    });

    saveConfigBtn?.addEventListener("click", async () => {
      const analytics =
        (document.getElementById("analytics-cookies") as HTMLInputElement)
          ?.checked || false;
      const ads =
        (document.getElementById("ads-cookies") as HTMLInputElement)?.checked ||
        false;

      const consent = { accepted: true, analytics, ads };
      localStorage.setItem(consentKey, JSON.stringify(consent));
      settingsModal?.classList.add("invisible", "opacity-0");
      banner?.classList.add("hidden");
      await sendConsent(consent);
    });
  });
</script>
